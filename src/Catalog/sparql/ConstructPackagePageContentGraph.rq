PREFIX nuget: <http://schema.nuget.org/schema#>

CONSTRUCT
{
    ?package a nuget:Package ;
	         nuget:catalogEntry ?catalogPackage .

    ?catalogPackage a nuget:CatalogPackage ;
                    nuget:id ?id ;
                    nuget:version ?version ;
                    nuget:dependencyGroup ?dependency_group ;
                    nuget:nupkgUrl ?nupkgUrl ;
	                nuget:published ?published ;
                    nuget:description ?description ;
                    nuget:title ?title ;
                    nuget:summary ?summary ;
                    nuget:iconUrl ?iconUrl ;
                    nuget:licenseUrl ?licenseUrl ;
                    nuget:projectUrl ?projectUrl ;
                    nuget:requireLicenseAcceptance ?requireLicenseAcceptance ;
                    nuget:language ?language ;
                    nuget:authors ?authors ;
                    nuget:minClientVersion ?minClientVersion .

    ?dependency_group a nuget:PackageDependencyGroup ;
	                  nuget:dependency ?dependency ;
                      nuget:targetFramework ?dependency_group_targetFramework .

    ?dependency a nuget:PackageDependency ;
	            nuget:id ?dependency_id ;
                nuget:registration ?dependency_registration ;
                nuget:range ?dependency_version .
}
WHERE
{
	BIND (@catalogPackage AS ?catalogPackage)

	BIND (IRI(CONCAT(@baseAddress, ?id, "/index.json#", ?version)) AS ?package)

    ?catalogPackage nuget:version ?version ;
                    nuget:id ?id ;
	                nuget:published ?published .

	OPTIONAL { ?catalogPackage nuget:description ?description . }
	OPTIONAL { ?catalogPackage nuget:title ?title . }
	OPTIONAL { ?catalogPackage nuget:summary ?summary . }
	OPTIONAL { ?catalogPackage nuget:iconUrl ?iconUrl . }
	OPTIONAL { ?catalogPackage nuget:licenseUrl ?licenseUrl . }
	OPTIONAL { ?catalogPackage nuget:projectUrl ?projectUrl . }
	OPTIONAL { ?catalogPackage nuget:requireLicenseAcceptance ?requireLicenseAcceptance . }
	OPTIONAL { ?catalogPackage nuget:language ?language . }
	OPTIONAL { ?catalogPackage nuget:authors ?authors . }
	OPTIONAL { ?catalogPackage nuget:minClientVersion ?minClientVersion . }

    BIND (IRI(CONCAT(@contentBase, "packages/", LCASE(?id), ".", LCASE(?version), ".nupkg" )) AS ?nupkgUrl)

    OPTIONAL
    {
        ?catalogPackage nuget:dependencyGroup ?dependency_group .
        ?dependency_group nuget:dependency ?dependency .

        OPTIONAL { ?dependency_group nuget:targetFramework ?dependency_group_targetFramework . }
        
        ?dependency nuget:id ?dependency_id .
        
        BIND (IRI(CONCAT(@baseAddress, ?dependency_id, "/index.json")) AS ?dependency_registration)
        
        OPTIONAL { ?dependency nuget:range ?dependency_version . }
    }
}
