PREFIX nuget: <http://schema.nuget.org/schema#>
PREFIX catalog: <http://schema.nuget.org/catalog#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

CONSTRUCT
{
    ?resource_package a nuget:Package ;
                      nuget:registration ?resource ;
                      nuget:version ?version ;
                      nuget:dependencyGroup ?resource_dependency_group ;
                      nuget:frameworkAssemblyGroup ?resource_framework_assembly_group ;
					  nuget:info ?resource_package_info ;
                      nuget:nupkgUrl ?nupkgUrl ;
                      nuget:minClientVersion ?minClientVersion ;
                      catalog:commitId ?commitId ;
                      catalog:commitTimestamp ?timeStamp .

	?resource_package_info a nuget:PackageInfo ;
                           nuget:authors ?authors ;
                           nuget:description ?description ;
                           nuget:requireLicenseAcceptance ?requireLicenseAcceptance ;
                           nuget:licenseUrl ?licenseUrl ;
                           nuget:licenseName ?licenseName ;
                           nuget:iconUrl ?iconUrl ;
                           nuget:downloadCount ?downloadCount ;
                           nuget:galleryDetailsUrl ?galleryDetailsUrl ;
                           nuget:reportAbuseUrl ?reportAbuseUrl ;
                           nuget:published ?published ;
                           nuget:tag ?tag ;
                           nuget:packageTargetFramework ?targetFramework ;
                           nuget:releaseNotes ?releaseNotes ;
                           nuget:title ?title ;
                           nuget:projectUrl ?projectUrl ;
						   nuget:copyright ?copyright ;
						   nuget:developmentDependency ?developmentDependency .

    ?resource_dependency_group a nuget:PackageDependencyGroup ;
	                           nuget:dependency ?resource_dependency ;
                               nuget:targetFramework ?dependency_group_targetFramework .

    ?resource_dependency a nuget:PackageDependency ;
	                     nuget:id ?dependency_id ;
                         nuget:registration ?dependency_registration ;
                         nuget:range ?dependency_version .

	?resource_framework_assembly_group a nuget:PackageFrameworkAssemblyGroup ;
	                                   nuget:targetFramework ?framework_assembly_group_targetFramework ;
	                                   nuget:assembly ?assembly .
}
WHERE
{
    BIND (IRI(CONCAT(@base, @id, @extension)) AS ?resource)

    ?package a nuget:Package ;
             nuget:version ?version ;
             nuget:id ?id ;
             nuget:published ?published ;
             catalog:commitId ?commitId ;
             catalog:commitTimestamp ?timeStamp .

    OPTIONAL { ?package nuget:authors ?authors . }
    OPTIONAL { ?package nuget:description ?description . }
    OPTIONAL { ?package nuget:title ?title . }
    OPTIONAL { ?package nuget:tag ?tag . }
    OPTIONAL { ?package nuget:targetFramework ?targetFramework . }
    OPTIONAL { ?package nuget:requireLicenseAcceptance ?requireLicenseAcceptance . }
    OPTIONAL { ?package nuget:licenseUrl ?licenseUrl . }
    OPTIONAL { ?package nuget:licenseName ?licenseName . }
    OPTIONAL { ?package nuget:iconUrl ?iconUrl . }
    OPTIONAL { ?package nuget:projectUrl ?projectUrl . }
    OPTIONAL { ?package nuget:releaseNotes ?releaseNotes . }
    OPTIONAL { ?package nuget:downloadCount ?downloadCount . }
    OPTIONAL { ?package nuget:minClientVersion ?minClientVersion . }
    OPTIONAL { ?package nuget:copyright ?copyright . }
    OPTIONAL { ?package nuget:developmentDependency ?developmentDependency . }

    FILTER (LCASE(?id) = @id)

    BIND (IRI(CONCAT(STR(?resource), "#", ?version)) AS ?resource_package)
    BIND (IRI(CONCAT(STR(?resource_package), "/", STRAFTER(STR(?dependency_group), "#"))) AS ?resource_dependency_group)
    BIND (IRI(CONCAT(STR(?resource_package), "/", STRAFTER(STR(?dependency), "#"))) AS ?resource_dependency)
    BIND (IRI(CONCAT(STR(?resource_package), "/info")) AS ?resource_package_info)

    BIND (IRI(CONCAT(@galleryBase, "/packages/", ?id, "/", ?version )) AS ?galleryDetailsUrl)
    BIND (IRI(CONCAT(STR(?galleryDetailsUrl), "/ReportAbuse" )) AS ?reportAbuseUrl)

    BIND (IRI(CONCAT(@contentBase, "/packages/", LCASE(?id), ".", ?version, ".nupkg" )) AS ?nupkgUrl)

    OPTIONAL
    {
        ?package nuget:dependencyGroup ?dependency_group .
        ?dependency_group nuget:dependency ?dependency .

        OPTIONAL { ?dependency_group nuget:targetFramework ?dependency_group_targetFramework . }
        
        ?dependency nuget:id ?dependency_id .
        
        BIND (IRI(CONCAT(@base, STR(?dependency_id), @extension)) AS ?dependency_registration)
        
        OPTIONAL { ?dependency nuget:range ?dependency_version . }
    }

    BIND (IRI(CONCAT(STR(?resource_package), "/", STRAFTER(STR(?framework_assembly_group), "#"))) AS ?resource_framework_assembly_group)

	OPTIONAL
	{
		?package nuget:frameworkAssemblyGroup ?framework_assembly_group .
		?framework_assembly_group nuget:assembly ?assembly .

		OPTIONAL { ?framework_assembly_group nuget:targetFramework ?framework_assembly_group_targetFramework . }
	}
}
